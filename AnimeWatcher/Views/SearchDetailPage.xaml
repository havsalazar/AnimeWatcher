<Page
    x:Class="AnimeWatcher.Views.SearchDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls" 
    xmlns:models="using:AnimeWatcher.Core.Models"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
     xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:EmptyObjectToObjectConverter x:Key="EmptyObjectToObjectConverter"
                                                 EmptyValue="Collapsed"
                                                 NotEmptyValue="Visible" />
    </Page.Resources>

    <Grid x:Name="ContentArea"  Margin="20,20,20,10"  >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" >
            <ProgressBar IsIndeterminate="True"
                         Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay, 
                            Converter={StaticResource BoolToVisibilityConverter},
                            ConverterParameter=False}" />

            <Grid x:Name="portrait" Padding="15,15,15,15">
                <Grid.Background>
                    <ImageBrush  ImageSource="{x:Bind ViewModel.SelectedAnime.Cover,Mode=OneWay}"
                                 Stretch="UniformToFill" Opacity="0.1" />
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Image Name="ImageExControl" HorizontalAlignment="Left"  CacheMode="BitmapCache"
                                  Grid.Row="0" Height="250"  Width="Auto"
                                Source="{x:Bind ViewModel.SelectedAnime.Cover, Mode=OneWay}" />

                <StackPanel Grid.Row="1" Grid.Column="1" Margin="20,0,0,0">
                    <TextBlock  x:Name="title" IsTextSelectionEnabled="True"  Margin="{StaticResource XXSmallTopMargin}"   Style="{ThemeResource TitleTextBlockStyle}"
                                Text="{x:Bind ViewModel.SelectedAnime.Title, Mode=OneWay}" />
                    <StackPanel Orientation="Horizontal" Margin="0,15,0,0" >
                        <TextBlock  
                            x:Name="type" IsTextSelectionEnabled="True"  Margin="0,0,30,0" Style="{ThemeResource SubtitleTextBlockStyle}"
                            Text="{x:Bind ViewModel.SelectedAnime.TypeStr, Mode=OneWay,
                            Converter={StaticResource StringFormatConverter}, ConverterParameter='Type: {0}'}" >
                        </TextBlock>

                        <TextBlock
                            x:Name="status" IsTextSelectionEnabled="True" Margin="0,0,30,0"   Style="{ThemeResource SubtitleTextBlockStyle}"
                            Text="{x:Bind ViewModel.SelectedAnime.Status, Mode=OneWay, 
                                    Converter={StaticResource StringFormatConverter}, ConverterParameter='Status:  {0}'}">
                        </TextBlock>
                        <TextBlock
                            x:Name="ProviderName" IsTextSelectionEnabled="True" Margin="0,0,0,0"  Style="{ThemeResource SubtitleTextBlockStyle}"
                            Text="{x:Bind ViewModel.SelectedAnime.Provider.Name, Mode=OneWay, 
                                    Converter={StaticResource StringFormatConverter}, ConverterParameter='Provider:  {0}'}">
                        </TextBlock>

                    </StackPanel>


                    <TextBlock Style="{ThemeResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.SelectedAnime.Description, Mode=OneWay}" Padding="0,25"/>
                </StackPanel>


            </Grid>

            <TextBox x:Name="animetxtid" Tag="{x:Bind ViewModel.SelectedAnime.Id,Mode=OneWay}" Visibility="Collapsed"/>
        </StackPanel>
        <StackPanel x:Name="ActionButtonsStack" Grid.Row="1" Margin="0,15,0,0"
                    Visibility="{x:Bind ViewModel.IsLoadingVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter},ConverterParameter=True}"
                    >
            <Grid x:Name="actionButtons" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <CommandBar Grid.Column="0" Width="Auto" Height="Auto" HorizontalAlignment="Left" DefaultLabelPosition="Right">
                    <CommandBar.PrimaryCommands>
                        <AppBarButton  Label="{x:Bind ViewModel.FavText,Mode=OneWay}" IsEnabled="{x:Bind ViewModel.IsLoadingFav,Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                       Command="{x:Bind ViewModel.FavoriteFunCommand}" >
                            <AppBarButton.Icon>
                                <FontIcon Glyph="{x:Bind ViewModel.FavStatus ,Mode=OneWay}"/>
                            </AppBarButton.Icon>

                        </AppBarButton>
                        <AppBarSeparator Margin="10,0,10,0"/>
                        <AppBarElementContainer VerticalContentAlignment="Center">
                            <Button Content="Change Favorite List" 
                                    IsEnabled="{x:Bind ViewModel.IsFavorite,Mode=OneWay}" 
                                    IsEnabledChanged="FavoriteCombo_IsEnabledChanged" >
                                <Button.Flyout>
                                    <Flyout>
                                        <StackPanel>
                                            <ListBox SelectionMode="Multiple" 
                                                     x:Name="favListbox"
                                                     SelectedItem="selectedFList"
                                                     ItemsSource="{x:Bind ViewModel.FavLists,Mode=OneWay}" 
                                                     DisplayMemberPath="Name"
                                                     SelectedValuePath="Id"
                                                     >
                                                <interactivity:Interaction.Behaviors>
                                                    <core:EventTriggerBehavior EventName="SelectionChanged">
                                                        <core:InvokeCommandAction Command="{x:Bind ViewModel.ChangeFavListsCommand}"
                                                                                  CommandParameter="{Binding ElementName=favListbox}"/>
                                                    </core:EventTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>

                                            </ListBox>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </AppBarElementContainer>
                        <!--<AppBarButton Icon="Like" Label="Like" />
                        <AppBarButton Icon="Dislike" Label="Dislike"/>-->

                        <AppBarSeparator Margin="10,0,10,0"/>
                        <AppBarButton Label="Go to Web">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="&#xEC27;" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarSeparator Margin="10,0,10,0"/>
                        <AppBarButton Label="Order" Command="{x:Bind ViewModel.OrderChapterListCommand}">
                            <AppBarButton.Icon>
                                <FontIcon Glyph="{x:Bind ViewModel.OrderIcon,Mode=OneWay}" />
                            </AppBarButton.Icon>
                        </AppBarButton>

                    </CommandBar.PrimaryCommands>
                </CommandBar>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                    <Button HorizontalAlignment="Right" Margin="0,0,10,0" IsEnabled="{x:Bind ViewModel.ForceLoad,Mode=OneWay}"
                            Command="{x:Bind ViewModel.ForceUpsertCommand}"
                            >
                        <StackPanel Orientation="Horizontal">
                            <FontIcon Glyph="&#xE9F3;" Margin="0,0,10,0"/>
                            <TextBlock Text="Force update"/>
                        </StackPanel>

                    </Button>
                    <RatingControl AutomationProperties.Name="RatingControl with placeholder" IsEnabled="False" 
                       PlaceholderValue="3.25" HorizontalAlignment="Right"/>
                </StackPanel>


            </Grid>
        </StackPanel>
        <StackPanel x:Name="LoadingVideo" Orientation="Horizontal" Grid.Row="2" Width="Auto"  
                    HorizontalAlignment="Center"
                    Visibility="{x:Bind ViewModel.IsLoadingVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                    >
            <TextBlock Text="Video is loading, please wait ..." Margin="0,0,15,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            <ProgressRing IsActive="True" Background="LightGray" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

        </StackPanel>

        <Grid x:Name="ChaptersData" Grid.Row="2" Margin="0,10,0,0"
              Visibility="{x:Bind ViewModel.IsLoadingVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter},ConverterParameter=True}"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="250"/>
            </Grid.ColumnDefinitions>
            <AutoSuggestBox PlaceholderText="Search..."   
                VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="Auto"                     
                QueryIcon="Find" Grid.Column="1"  Margin="0,0,0,0" Height="35" VerticalAlignment="Top"/>

            <ListView Margin="0,0,0,0" Grid.Column="0" MinWidth="550" IsItemClickEnabled="True" 
                      ItemsSource="{x:Bind ViewModel.ChapterList, Mode=OneWay}" ItemClick="ListView_ItemClick">

                <ListView.ItemTemplate >
                    <DataTemplate x:DataType="models:Chapter">
                        <StackPanel Padding="0,15,0,15">
                            <!--<TextBlock Text="{Binding Path=Name}" />-->
                            <TextBlock  VerticalAlignment="Center" Text="{x:Bind ChapterNumber, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='Episode # {0}'}">
                                <TextBlock.FontSize>15</TextBlock.FontSize>
                            </TextBlock>
                            <StackPanel Orientation="Horizontal" Visibility="{x:Bind History, Mode=OneWay,Converter={StaticResource EmptyObjectToObjectConverter} }">
                                <TextBlock Text="Last seen :" Margin="0,0,10,0"/>
                                <TextBlock Text="{Binding Path=History.WatchedDate}" />
                                <TextBlock Text="Time watched :" Margin="10,0,10,0"/>
                                <TextBlock Text="{Binding Path=History.TimeString}" />
                            </StackPanel>

                            <!--<TextBlock Text="{Binding Path=Url}" />-->
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>


        <TeachingTip 
            x:Name="ToggleThemeTeachingTip2" 
            IsOpen="{x:Bind ViewModel.ErrorActive , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
	        Title="Error Detected"
	        Subtitle="{x:Bind ViewModel.ErrorMessage,Mode=OneWay}"
	        PreferredPlacement="Auto"
	        PlacementMargin="20"
	        IsLightDismissEnabled="True"
	        CloseButtonContent="Got it!">
        </TeachingTip>
    </Grid>



</Page>
