<Page
    x:Class="AnimeWatcher.Views.VideoPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:AnimeWatcher.Converters" xmlns:converters1="using:CommunityToolkit.WinUI.Converters" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity" xmlns:lvs="using:LibVLCSharp.Platforms.Windows" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:models="using:AnimeWatcher.Core.Models"
    xmlns:usercontrols="using:AnimeWatcher.UserControls"
    mc:Ignorable="d">
    <Page.Resources>
        <converters:LongToDoubleConverter x:Key="LongToDoubleConverter" />
        <converters1:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters1:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters1:StringFormatConverter x:Key="StringFormatConverter" />
    </Page.Resources>
    <Grid x:Name="ContentArea" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <interactivity:Interaction.Behaviors>
            <interactions:EventTriggerBehavior EventName="PointerWheelChanged">
                <interactions:InvokeCommandAction Command="{x:Bind ViewModel.ScrollChangedCommand}" />
            </interactions:EventTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <Grid Width="0" Height="0" Visibility="{x:Bind ViewModel.ControlsVisibility, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
            <Button Width="0" Height="0" Command="{x:Bind ViewModel.PlayPauseCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Space" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button Width="0" Height="0" Command="{x:Bind ViewModel.FullScreenCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Escape" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button Width="0" Height="0" Command="{x:Bind ViewModel.RewindCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Left" />
                </Button.KeyboardAccelerators>
            </Button>
            <Button Width="0" Height="0" Command="{x:Bind ViewModel.FastForwardCommand}">
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Key="Right" />
                </Button.KeyboardAccelerators>
            </Button>

        </Grid>

        <ProgressRing
            Width="80" Height="80"
            HorizontalAlignment="Center" VerticalAlignment="Center"
            Canvas.ZIndex="2" IsActive="True"
            Visibility="{x:Bind ViewModel.LoadingVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />

        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Canvas.ZIndex="2" Visibility="{x:Bind ViewModel.IsErrorVideo, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <TextBlock Margin="0,0,0,15" FontSize="25" Text="Video not Available" />

            <!--<FontIcon Glyph="&#xEB90;" FontSize="40" Margin="0,0,0,15"/>-->

            <Button HorizontalAlignment="Center" VerticalAlignment="Center" Command="{x:Bind ViewModel.RetryLoadCommand}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,0,15,0" FontSize="20" Text="Retry" />
                    <FontIcon FontSize="20" Glyph="&#xE72C;" />
                </StackPanel>
            </Button>
        </StackPanel>



        <SplitView
            x:Name="splitView"
            Grid.Row="0"
            Grid.RowSpan="{x:Bind ViewModel.RowSpan, Mode=OneWay}"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            CompactPaneLength="48" DisplayMode="Overlay"
            IsPaneOpen="{x:Bind ViewModel.IsChapPanelOpen, Mode=OneWay}"
            OpenPaneLength="256"
            PaneBackground="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
            PanePlacement="Right">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        x:Name="PaneHeader"
                        Grid.Row="1"
                        Margin="0,50,0,0" HorizontalAlignment="Center"
                        Style="{StaticResource BaseTextBlockStyle}"
                        Text="Chapter List" />

                    <ListView
                        x:Name="ChapPaneList"
                        Grid.Row="2"
                        Margin="0,12,0,0" VerticalAlignment="Stretch"
                        IsItemClickEnabled="True"
                        ItemsSource="{x:Bind ViewModel.ChapterList, Mode=OneWay}"
                        SelectedIndex="{x:Bind ViewModel.SelectedIndex, Mode=OneWay}"
                        SelectionMode="Single">
                        <interactivity:Interaction.Behaviors>
                            <interactions:EventTriggerBehavior EventName="ItemClick">
                                <interactions:InvokeCommandAction Command="{x:Bind ViewModel.onClickChapCommand}" />
                            </interactions:EventTriggerBehavior>

                        </interactivity:Interaction.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:Chapter">
                                <StackPanel Padding="0,15,0,15">
                                    <!--<TextBlock Text="{Binding Path=Name}" />-->
                                    <TextBlock VerticalAlignment="Center" Text="{x:Bind ChapterNumber, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='Episode # {0}'}" TextWrapping="Wrap">
                                        <TextBlock.FontSize>15</TextBlock.FontSize>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>


                    <!--<StackPanel Orientation="Horizontal" Grid.Row="2" Margin="14,24,0,24" >
                        <SymbolIcon Symbol="Setting" />
                        <TextBlock Text="Settings" Margin="24,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>-->
                </Grid>
            </SplitView.Pane>
            <interactivity:Interaction.Behaviors>
                <interactions:EventTriggerBehavior EventName="PaneClosed">
                    <interactions:InvokeCommandAction Command="{x:Bind ViewModel.onClosePaneCommand}" />
                </interactions:EventTriggerBehavior>

            </interactivity:Interaction.Behaviors>

            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <lvs:VideoView
                    x:Name="VideoView"
                    Grid.Row="0"
                    Grid.RowSpan="{x:Bind ViewModel.RowSpan, Mode=OneWay}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    MediaPlayer="{x:Bind ViewModel.Player}">
                    <interactivity:Interaction.Behaviors>
                        <interactions:EventTriggerBehavior EventName="Initialized">
                            <interactions:InvokeCommandAction Command="{x:Bind ViewModel.InitializedCommand}" />
                        </interactions:EventTriggerBehavior>
                        <interactions:EventTriggerBehavior EventName="PointerMoved">
                            <interactions:InvokeCommandAction Command="{x:Bind ViewModel.PointerMovedCommand}" />
                        </interactions:EventTriggerBehavior>
                        <interactions:EventTriggerBehavior EventName="PointerPressed">
                            <interactions:InvokeCommandAction Command="{x:Bind ViewModel.ClickFullCommand}" />
                        </interactions:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </lvs:VideoView>
            </Grid>
        </SplitView>




        <Grid
            x:Name="Controls"
            Grid.Row="1"
            VerticalAlignment="Center"
            Background="{ThemeResource ControlsBackground}"
            Visibility="{x:Bind ViewModel.ControlsVisibility, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="{x:Bind ViewModel.TimeString, Mode=OneWay, FallbackValue='--:--:--'}" />

            <Slider
                Grid.Row="0" Grid.Column="1"
                Margin="10,0" VerticalAlignment="Center"
                IsEnabled="True" IsThumbToolTipEnabled="False"
                Maximum="{x:Bind ViewModel.TotalTimeLong, Mode=OneWay, Converter={StaticResource LongToDoubleConverter}}"
                Minimum="0"
                Value="{x:Bind ViewModel.TimeLong, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource LongToDoubleConverter}}" />

            <CommandBar
                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                HorizontalAlignment="Left"
                DefaultLabelPosition="Collapsed">
                <CommandBar.PrimaryCommands>
                    <usercontrols:AppBarPlaybackStateButton Command="{x:Bind ViewModel.PlayPauseCommand}" IsPlaying="{x:Bind ViewModel.IsPlaying, Mode=OneWay, FallbackValue=false}" Label="Play" Style="{StaticResource DefaultAppBarButtonStyle}">
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Space" />
                        </AppBarButton.KeyboardAccelerators>
                    </usercontrols:AppBarPlaybackStateButton>
                    <AppBarSeparator />
                    <AppBarButton Width="50" Label="Rewind">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xEB9E;" />
                        </AppBarButton.Icon>
                        <interactivity:Interaction.Behaviors>
                            <interactions:EventTriggerBehavior EventName="Click">
                                <interactions:InvokeCommandAction Command="{x:Bind ViewModel.RewindCommand}" />
                            </interactions:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Left">
                                <interactivity:Interaction.Behaviors>
                                    <interactions:EventTriggerBehavior EventName="Invoked">
                                        <interactions:InvokeCommandAction Command="{x:Bind ViewModel.RewindCommand}" />
                                    </interactions:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </KeyboardAccelerator>
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarButton Width="50" Label="Fast forward">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xEB9D;" />
                        </AppBarButton.Icon>
                        <interactivity:Interaction.Behaviors>
                            <interactions:EventTriggerBehavior EventName="Click">
                                <interactions:InvokeCommandAction Command="{x:Bind ViewModel.FastForwardCommand}" />
                            </interactions:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Right">
                                <interactivity:Interaction.Behaviors>
                                    <interactions:EventTriggerBehavior EventName="Invoked">
                                        <interactions:InvokeCommandAction Command="{x:Bind ViewModel.FastForwardCommand}" />
                                    </interactions:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </KeyboardAccelerator>
                        </AppBarButton.KeyboardAccelerators>
                    </AppBarButton>
                    <AppBarSeparator />
                    <AppBarButton Margin="5,0,5,0" Command="{x:Bind ViewModel.SkipIntroCommand}" Content="Skip intro" />
                    <AppBarSeparator />
                    <AppBarElementContainer VerticalContentAlignment="Center">
                        <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                            <!--<TextBlock Text="Speed :" VerticalAlignment="Center"/>-->
                            <ComboBox x:Name="cbSpeed" Width="80" HorizontalContentAlignment="Center" SelectedIndex="0">
                                <interactivity:Interaction.Behaviors>
                                    <interactions:EventTriggerBehavior EventName="SelectionChanged">
                                        <interactions:InvokeCommandAction Command="{x:Bind ViewModel.ChangeSpeedCommand}" CommandParameter="{Binding ElementName=cbSpeed}" />
                                    </interactions:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                                <ComboBoxItem Tag="1">x1</ComboBoxItem>
                                <ComboBoxItem Tag="1.25">x1.25</ComboBoxItem>
                                <ComboBoxItem Tag="1.5">x1.5</ComboBoxItem>
                                <ComboBoxItem Tag="1.75">x1.75</ComboBoxItem>
                                <ComboBoxItem Tag="2">x2</ComboBoxItem>
                            </ComboBox>
                        </StackPanel>
                    </AppBarElementContainer>
                    <AppBarSeparator />
                    <AppBarButton Width="50" Command="{x:Bind ViewModel.PrevChapterCommand}" IsEnabled="{x:Bind ViewModel.IsEnablePrev, Mode=OneWay}" Label="Previous">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE892;" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton Width="50" Command="{x:Bind ViewModel.NextChapterCommand}" IsEnabled="{x:Bind ViewModel.IsEnableNext, Mode=OneWay}" Label="Next">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE893;" />
                        </AppBarButton.Icon>
                    </AppBarButton>

                </CommandBar.PrimaryCommands>
            </CommandBar>
            <StackPanel
                Grid.Row="1" Grid.Column="1"
                Width="350"
                HorizontalAlignment="center" VerticalAlignment="Center">
                <TextBlock
                    Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind ViewModel.ChapterName, Mode=OneWay}"
                    TextWrapping="Wrap" />
            </StackPanel>


            <StackPanel
                Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                Margin="10,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                Orientation="Horizontal" Spacing="5">


                <Button Width="0" Height="0" Command="{x:Bind ViewModel.VolumeUpCommand}">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Up" />
                    </Button.KeyboardAccelerators>
                </Button>
                <Button Width="0" Height="0" Command="{x:Bind ViewModel.VolumeDownCommand}">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="Down" />
                    </Button.KeyboardAccelerators>
                </Button>

                <usercontrols:AppBarVolumeStateButton
                    VerticalAlignment="Center"
                    Command="{x:Bind ViewModel.MuteCommand}"
                    LabelPosition="Collapsed"
                    Style="{StaticResource DefaultAppBarButtonStyle}"
                    Volume="{x:Bind ViewModel.Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=100}">

                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="M" />
                    </Button.KeyboardAccelerators>
                </usercontrols:AppBarVolumeStateButton>
                <Slider
                    Width="150"
                    VerticalAlignment="Center"
                    Maximum="200" Minimum="0" SnapsTo="Ticks" TickFrequency="5"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=100}" />
                <CommandBar DefaultLabelPosition="Collapsed">
                    <AppBarElementContainer VerticalContentAlignment="Center">
                        <ToggleButton Command="{x:Bind ViewModel.ToggleChapPanelCommand}" IsChecked="{x:Bind ViewModel.IsChapPanelOpen, Mode=OneWay}">
                            <FontIcon Glyph="&#xE7BC;" />
                        </ToggleButton>
                    </AppBarElementContainer>
                    <usercontrols:AppBarWindowPresenterStateButton Command="{x:Bind ViewModel.FullScreenCommand}" IsFullScreen="{x:Bind ViewModel.IsNotFullScreen, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" Label="Toggle FullScreen" Style="{StaticResource DefaultAppBarButtonStyle}">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE740;" />
                        </AppBarButton.Icon>
                        <AppBarButton.KeyboardAccelerators>
                            <KeyboardAccelerator Key="F" />
                        </AppBarButton.KeyboardAccelerators>
                    </usercontrols:AppBarWindowPresenterStateButton>
                </CommandBar>


            </StackPanel>

        </Grid>

    </Grid>
</Page>
